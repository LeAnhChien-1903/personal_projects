<launch>
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.4 0 0 3.14 0 0 base_link laser 20"/>
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_base_footprint" args="0.0 0 0 0 0 0 base_link base_footprint 20"/>
    <node pkg="controller" type="controller" name="robot_controller" output="screen"/>
    <include file="$(find hins_he_driver)/launch/hins_he_driver.launch"/>
    <!-- AMCL  -->
    <include file="$(find obstacle_detection)/launch/real_amcl.launch" />
    <!-- Filtered scan -->
    <node pkg="robot_slam" type="lidar_filter" name="lidar_filter">
        <rosparam command="load" file="$(find robot_slam)/config/lidar_filter_params.yaml" />
    </node>
    <!-- <include file="$(find laserscan_to_pointcloud)/launch/laserscan_to_pointcloud_assembler.launch" /> -->
    <!-- Map server -->
    <arg name="map_file" default="$(find robot_slam)/map/real_map.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
        <param name="frame_id" value="map"/>
    </node>
    
    <!-- Convert point cloud -->
    <!-- <node pkg="point_cloud_converter" name="point_cloud_converter" type="point_cloud_converter_node" >
		<remap from="points2_in" to="/filtered_cloud"/>
		<remap from="points_out" to="/filtered_cloud_1" />
	</node> -->

    <!-- Local cost map -->
    <!-- <node name="costmap_node" pkg="costmap_2d" type="costmap_2d_node" >
        <rosparam file="$(find obstacle_detection)/config/real_local_costmap.yaml" command="load" ns="costmap" />
        <remap from="/costmap_node/costmap/costmap" to="/local_costmap" />
    </node> -->

    <node pkg="obstacle_detection" type="obstacle_detector" name="obstacle_detector"  output="screen">
        <rosparam command="load" file="$(find obstacle_detection)/config/real_param.yaml"/>
    </node>
    <!-- ***************** RVIZ *********************** -->
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find obstacle_detection)/rviz/real_rviz.rviz" />
</launch>